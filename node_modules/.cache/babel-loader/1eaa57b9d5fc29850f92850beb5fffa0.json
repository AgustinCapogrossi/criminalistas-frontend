{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nasync function createLobby(game_name, game_creator, num_players, is_started, is_full) {\n  try {\n    await axios.post(`http://127.0.0.1:8000/creationgame?game_name=${game_name}&game_creator=${game_creator}&num_players=${num_players}&is_started=${is_started}&is_full=${is_full}`);\n  } catch (error) {\n    console.log(error);\n  }\n}\n/*function listmatch(){\n  useEffect(() => {\n    fetchPartidas()\n  }, [])\n  \n  const [partidas, setPartidas] = useState([]);\n  \n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    // body: JSON.stringify({game_name, host, num_players}),\n  }\n  \n  const fetchPartidas = async () => {\n    const response = await fetch('http://localhost:8000/show_available_games', requestOptions);\n    const partidas = await response.json();\n    console.log(partidas);\n    setPartidas(partidas);\n  }\n\n  return partidas;\n}*/\n\n\nfunction listmatch() {\n  _s();\n\n  useEffect(() => {\n    fetchPartidas();\n  }, []);\n  const [partidas, setPartidas] = useState([]);\n\n  const fetchPartidas = async () => {\n    try {\n      const response = await axios.get(`http://127.0.0.1:8000/show_available_games`);\n      console.log(response);\n      setPartidas(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return partidas;\n}\n\n_s(listmatch, \"nArGjs+COxB915Rk6uIS/yZJX1Y=\");\n\nexport const servicioPartida = {\n  createLobby,\n  listmatch\n};","map":{"version":3,"sources":["/home/jael/Documentos/Ing Software/Proyecto/criminalistas-frontend-de-practica/src/servicios/ServicioPartida.jsx"],"names":["React","useEffect","useState","axios","createLobby","game_name","game_creator","num_players","is_started","is_full","post","error","console","log","listmatch","fetchPartidas","partidas","setPartidas","response","get","data","servicioPartida"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAeC,WAAf,CAA2BC,SAA3B,EAAsCC,YAAtC,EAAoDC,WAApD,EAAiEC,UAAjE,EAA6EC,OAA7E,EAAsF;AACpF,MAAI;AACF,UAAMN,KAAK,CAACO,IAAN,CAAY,gDAA+CL,SAAU,iBAAgBC,YAAa,gBAAeC,WAAY,eAAcC,UAAW,YAAWC,OAAQ,EAAzK,CAAN;AACD,GAFD,CAEE,OAAOE,KAAP,EAAa;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASG,SAAT,GAAoB;AAAA;;AAClBb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMa,aAAa,GAAG,YAAY;AAChC,QAAI;AACF,YAAMG,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAW,4CAAX,CAAvB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACAD,MAAAA,WAAW,CAACC,QAAQ,CAACE,IAAV,CAAX;AACD,KAJD,CAIE,OAAOT,KAAP,EAAa;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GARD;;AAUA,SAAOK,QAAP;AACD;;GAlBQF,S;;AAqBT,OAAO,MAAMO,eAAe,GAAG;AAACjB,EAAAA,WAAD;AAAcU,EAAAA;AAAd,CAAxB","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nasync function createLobby(game_name, game_creator, num_players, is_started, is_full) {\n  try {\n    await axios.post(`http://127.0.0.1:8000/creationgame?game_name=${game_name}&game_creator=${game_creator}&num_players=${num_players}&is_started=${is_started}&is_full=${is_full}`);\n  } catch (error){\n    console.log(error);\n  }\n}\n\n/*function listmatch(){\n  useEffect(() => {\n    fetchPartidas()\n  }, [])\n  \n  const [partidas, setPartidas] = useState([]);\n  \n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    // body: JSON.stringify({game_name, host, num_players}),\n  }\n  \n  const fetchPartidas = async () => {\n    const response = await fetch('http://localhost:8000/show_available_games', requestOptions);\n    const partidas = await response.json();\n    console.log(partidas);\n    setPartidas(partidas);\n  }\n\n  return partidas;\n}*/\n\n\nfunction listmatch(){\n  useEffect(() => {\n    fetchPartidas()\n  }, [])\n  \n  const [partidas, setPartidas] = useState([]);\n  \n  const fetchPartidas = async () => {\n    try {\n      const response = await axios.get(`http://127.0.0.1:8000/show_available_games`);\n      console.log(response);\n      setPartidas(response.data);\n    } catch (error){\n      console.log(error);\n    }\n  }\n\n  return partidas;\n}\n\n\nexport const servicioPartida = {createLobby, listmatch}"]},"metadata":{},"sourceType":"module"}