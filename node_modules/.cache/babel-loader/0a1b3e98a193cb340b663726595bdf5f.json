{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nasync function createNickname(nickname) {\n  try {\n    await axios.post(`http://127.0.0.1:8000/creationuser?user_to_create=${nickname}`);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function createLobby(game_name, game_creator, num_players, is_started, is_full) {\n  try {\n    await axios.post(`http://127.0.0.1:8000/creationgame?game_name=${game_name}&game_creator=${game_creator}&num_players=${num_players}&is_started=${is_started}&is_full=${is_full}`);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction listmatch() {\n  _s();\n\n  useEffect(() => {\n    fetchPartidas();\n  }, []);\n  const [partidas, setPartidas] = useState([]);\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    } // body: JSON.stringify({game_name, host, num_players}),\n\n  };\n\n  const fetchPartidas = async () => {\n    const response = await fetch('http://localhost:8000/show_available_games', requestOptions);\n    const partidas = await response.json();\n    console.log(partidas);\n    setPartidas(partidas);\n  };\n\n  return partidas;\n}\n\n_s(listmatch, \"nArGjs+COxB915Rk6uIS/yZJX1Y=\");\n\nfunction listplayers(game_name) {\n  _s2();\n\n  useEffect(() => {\n    fetchPlayers();\n  }, []);\n  const [players, setPlayers] = useState([]);\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    } // body: JSON.stringify({game_name, host, num_players}),\n\n  };\n\n  const fetchPlayers = async () => {\n    const response = await fetch(`http://localhost:8000/show_players?${game_name}`, requestOptions);\n    const players = await response.json();\n    console.log(players);\n    setPlayers(players);\n  };\n\n  return players;\n}\n\n_s2(listplayers, \"tlOUOZf+deyMd5qwfDnuPJuwWtM=\");\n\nexport const servicioPartida = {\n  createLobby,\n  listmatch,\n  listplayers,\n  createNickname\n};","map":{"version":3,"sources":["/home/jael/Documentos/Ing Software/Proyecto/Front end/criminalistas-frontend/src/servicios/ServicioPartida.jsx"],"names":["React","useEffect","useState","axios","createNickname","nickname","post","error","console","log","createLobby","game_name","game_creator","num_players","is_started","is_full","listmatch","fetchPartidas","partidas","setPartidas","requestOptions","method","headers","response","fetch","json","listplayers","fetchPlayers","players","setPlayers","servicioPartida"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAeC,cAAf,CAA8BC,QAA9B,EAAuC;AACrC,MAAI;AACA,UAAMF,KAAK,CAACG,IAAN,CAAY,qDAAoDD,QAAS,EAAzE,CAAN;AACH,GAFD,CAEE,OAAOE,KAAP,EAAa;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACF;;AAED,eAAeG,WAAf,CAA2BC,SAA3B,EAAsCC,YAAtC,EAAoDC,WAApD,EAAiEC,UAAjE,EAA6EC,OAA7E,EAAsF;AACpF,MAAI;AACF,UAAMZ,KAAK,CAACG,IAAN,CAAY,gDAA+CK,SAAU,iBAAgBC,YAAa,gBAAeC,WAAY,eAAcC,UAAW,YAAWC,OAAQ,EAAzK,CAAN;AACD,GAFD,CAEE,OAAOR,KAAP,EAAa;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AAED,SAASS,SAAT,GAAoB;AAAA;;AAClBf,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMkB,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,KADa;AAErBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFY,CAGrB;;AAHqB,GAAvB;;AAMA,QAAML,aAAa,GAAG,YAAY;AAChC,UAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,EAA+CJ,cAA/C,CAA5B;AACA,UAAMF,QAAQ,GAAG,MAAMK,QAAQ,CAACE,IAAT,EAAvB;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;AACAC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD,GALD;;AAOA,SAAOA,QAAP;AACD;;GArBQF,S;;AAuBT,SAASU,WAAT,CAAqBf,SAArB,EAA+B;AAAA;;AAC7BV,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMkB,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,KADa;AAErBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFY,CAGrB;;AAHqB,GAAvB;;AAMA,QAAMK,YAAY,GAAG,YAAY;AAC/B,UAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAqCb,SAAU,EAAjD,EAAoDS,cAApD,CAA5B;AACA,UAAMQ,OAAO,GAAG,MAAML,QAAQ,CAACE,IAAT,EAAtB;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAYmB,OAAZ;AACAC,IAAAA,UAAU,CAACD,OAAD,CAAV;AACD,GALD;;AAOA,SAAOA,OAAP;AACD;;IArBQF,W;;AAwBT,OAAO,MAAMI,eAAe,GAAG;AAACpB,EAAAA,WAAD;AAAcM,EAAAA,SAAd;AAAyBU,EAAAA,WAAzB;AAAsCtB,EAAAA;AAAtC,CAAxB","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nasync function createNickname(nickname){\n  try {\n      await axios.post(`http://127.0.0.1:8000/creationuser?user_to_create=${nickname}`);\n  } catch (error){\n      console.log(error);\n  }\n}\n\nasync function createLobby(game_name, game_creator, num_players, is_started, is_full) {\n  try {\n    await axios.post(`http://127.0.0.1:8000/creationgame?game_name=${game_name}&game_creator=${game_creator}&num_players=${num_players}&is_started=${is_started}&is_full=${is_full}`);\n  } catch (error){\n    console.log(error);\n  }\n}\n\nfunction listmatch(){\n  useEffect(() => {\n    fetchPartidas()\n  }, [])\n  \n  const [partidas, setPartidas] = useState([]);\n  \n  const requestOptions = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n    // body: JSON.stringify({game_name, host, num_players}),\n  }\n  \n  const fetchPartidas = async () => {\n    const response = await fetch('http://localhost:8000/show_available_games', requestOptions);\n    const partidas = await response.json();\n    console.log(partidas);\n    setPartidas(partidas);\n  }\n\n  return partidas;\n}\n\nfunction listplayers(game_name){\n  useEffect(() => {\n    fetchPlayers()\n  }, [])\n  \n  const [players, setPlayers] = useState([]);\n  \n  const requestOptions = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n    // body: JSON.stringify({game_name, host, num_players}),\n  }\n  \n  const fetchPlayers = async () => {\n    const response = await fetch(`http://localhost:8000/show_players?${game_name}`, requestOptions);\n    const players = await response.json();\n    console.log(players);\n    setPlayers(players);\n  }\n\n  return players;\n}\n\n\nexport const servicioPartida = {createLobby, listmatch, listplayers, createNickname}"]},"metadata":{},"sourceType":"module"}